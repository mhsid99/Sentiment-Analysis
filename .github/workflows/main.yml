name: CI/CD for Sentiment Analysis

on:
  push:
    branches:
      - main

jobs:
  # Build Job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Upload artifact to enable deployment
        uses: actions/upload-artifact@v3
        with:
          name: sentiment-analysis-artifact
          path: ./

   # Deploy Job
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: sentiment-analysis-artifact
          path: ./

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1 # Change to your region
          
      - name: Create SSH key file
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > ec2-key.pem
          chmod 600 ec2-key.pem
          
      #- name: Add EC2 host key to known_hosts
        #run: |
         # mkdir -p ~/.ssh
          #ssh-keyscan -H ec2-23-20-235-154.compute-1.amazonaws.com >> ~/.ssh/known_hosts

      - name: Copy files to EC2 instance
        run: |
          scp -i ec2-key.pem -r ./ ec2-44-211-176-242.compute-1.amazonaws.com:/home/ubuntu/sentiment

      - name: SSH into EC2 and Deploy
        run: |
          ssh -i ec2-key.pem ubuntu@ec2-44-211-176-242.compute-1.amazonaws.com << 'EOF'
          cd /home/ubuntu/sentiment
          # Add commands to set up environment and run your Flask app
          # For example:
          python3 -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt
          nohup flask run --host=0.0.0.0 --port=5000 &
          EOF
